{"version":3,"sources":["webpack:///./src/pages/getting-started.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAcN,EAAc,eAC5BO,EAAaP,EAAc,cAC3BQ,EAAc,CAClBT,gBAEIU,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGV,E,oIACF,mBACD,OAAO,YAACO,EAAD,KAAeD,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,cAG5E,YAACR,EAAD,CAAiBQ,QAAQ,mBACvB,wFAAuE,kBAAIC,WAAW,KAAf,aAAvE,sBAEF,YAACR,EAAD,CAAaO,QAAQ,eACvB,YAACN,EAAD,CAAYM,QAAQ,cAApB,WACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,oBACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,SACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,QACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,UACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,YAEE,sCACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,mBADZ,uCAIL,sCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,wCAIL,0CACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6JAUL,0BAAS,sBAAQA,WAAW,KAAnB,SAAT,mCAAsF,0BAAYA,WAAW,KAAvB,iBACtF,+BACA,4BAAW,kBAAIA,WAAW,KAAf,SAAX,iEACA,2CAA0B,kBAAIA,WAAW,KAAf,YAA1B,QAAuE,kBAAIA,WAAW,KAAf,YAAvE,WAAuH,kBAAIA,WAAW,KAAf,aAAvH,kCAA+L,kBAAIA,WAAW,KAAf,WAA/L,QAA2O,kBAAIA,WAAW,KAAf,WAA3O,uDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gYAqBL,8BACA,4BAAW,kBAAIA,WAAW,KAAf,QAAX,wGACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,ovBAoCL,gCACA,4BAAW,kBAAIA,WAAW,KAAf,UAAX,uFAAqI,kBAAIA,WAAW,KAAf,WAArI,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,kJAWL,iCACA,oCAAmB,kBAAIA,WAAW,KAAf,WAAnB,+CAAsG,kBAAIA,WAAW,KAAf,UAAtG,MACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6OAmBTH,EAAWI,gBAAiB","file":"component---src-pages-getting-started-mdx-223034f965ee6be5a44f.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/gonzaloacosta/workspace/redux-mvc-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`I’ll guide you through the installation and basic setup for the `}<em parentName=\"p\">{`redux-mvc`}</em>{` counter example.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Install</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Folder Structure</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Model</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">View</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Module</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Context</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Installation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`npm install @redux-mvc/redux-mvc\n`}</code></pre>\n    <h3>{`Dependencies`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`npm install redux react react-dom\n`}</code></pre>\n    <h2>{`Folder Structure`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`Counter\n  | index.js // module file\n  | model.js // model file\n  | View \n    | index.js // context file\n    | Counter.js // counter view file\n  \n`}</code></pre>\n    <p>{`  `}<strong parentName=\"p\">{`Note:`}</strong>{` render the module by requiring `}<inlineCode parentName=\"p\">{`Counter/View`}</inlineCode></p>\n    <h2>{`Model`}</h2>\n    <p>{`The `}<em parentName=\"p\">{`model`}</em>{` is the business logic layer where the state updates happen. `}</p>\n    <p>{`You can define the `}<em parentName=\"p\">{`iniState`}</em>{` and `}<em parentName=\"p\">{`reducers`}</em>{` in it. `}<em parentName=\"p\">{`redux-mvc`}</em>{` will dynamically generate the `}<em parentName=\"p\">{`actions`}</em>{` and `}<em parentName=\"p\">{`getters`}</em>{` for you so you avoid writing a bit of boilerplate.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { createModel } from \"redux-mvc\"\n\nconst model = createModel({\n    iniState: {\n        count: 0,\n    },\n    reducers: {\n        add: (state, action) => ({ count: state.count + 1 }),\n        reset: (state, action) => ({ count: 0 }),\n    },\n    namespace: \"Counter\",\n})\n\nconst { actions, getters } = model\n\nexport { actions, getters }\n\nexport default model\n`}</code></pre>\n    <h2>{`View`}</h2>\n    <p>{`The `}<em parentName=\"p\">{`view`}</em>{` is the presentational layer. By using dependency injection we can keep it as stateless as possible.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import React from \"react\"\nimport { connect } from \"redux-mvc\"\n\nimport { noop } from \"redux-mvc/utils\"\n\nimport { getters, actions } from \"./model\"\n\nconst decorate = connect(\n    { count: getters.count },\n    { add: actions.add, reset: actions.reset }\n)\n\nconst Counter = ({\n    count = 0,\n    add = noop,\n    reset = noop,\n}) => (\n    <div style={{ display: \"flex\" }}>\n        <div style={{ marginRight: 10 }}>Count:</div>\n        <button\n            style={{ marginRight: 10 }}\n            onClick={add}\n        >\n            add\n        </button>\n        <button style={{ marginRight: 10 }} onClick={reset}>\n            reset\n        </button>\n        <div>{count}</div>\n    </div>\n)\n\nexport default decorate(Counter)\n`}</code></pre>\n    <h2>{`Module`}</h2>\n    <p>{`The `}<em parentName=\"p\">{`module`}</em>{` is the configuration layer, in this case it adds lifecycle methods required by the `}<em parentName=\"p\">{`context`}</em>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { createModule } from \"redux-mvc\"\n\nimport model from \"./model.js\"\n\nconst module = createModule(model)\n\nexport default module\n\n`}</code></pre>\n    <h2>{`Context`}</h2>\n    <p>{`Finally the `}<em parentName=\"p\">{`context`}</em>{` is where you run an instance of the page’s `}<em parentName=\"p\">{`module`}</em>{`. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import React from \"react\"\nimport { createContext } from \"redux-mvc\"\n\nimport module from \"../index\"\nimport Counter from \"./Counter.js\"\n\nconst decorate = createContext({\n    module,\n}),\n\nexport default decorate(Counter)\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}