{"version":3,"sources":["webpack:///./src/pages/context/connect/usage.mdx"],"names":["name","_frontmatter","PageDescription","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"weAMO,IAEeA,EAFTC,EAAe,GAOtBC,GALgBF,EAKgB,kBALR,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,kBAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,E,oIACF,mBACD,OAAO,YAACI,EAAD,KAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAG5E,YAACT,EAAD,CAAiBS,QAAQ,mBACvB,oCAAmB,kBAAIC,WAAW,KAAf,QAAnB,8BAAkF,kBAAIA,WAAW,KAAf,WAAlF,WAEF,qCACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,OAA2B,kBAAIA,WAAW,KAAf,WAA3B,yBAAwF,kBAAIA,WAAW,KAAf,eAAxF,aAA6I,kBAAIA,WAAW,KAAf,kBAA7I,yCAAiO,kBAAIA,WAAW,KAAf,eAAjO,aAAsR,kBAAIA,WAAW,KAAf,kBAAtR,MAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mBAAuC,kBAAIA,WAAW,KAAf,cAAvC,0EACG,kBAAIA,WAAW,KAAf,cADH,uBAGF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,OAA2B,kBAAIA,WAAW,KAAf,WAA3B,yDAAwH,kBAAIA,WAAW,KAAf,cAAxH,OAGJ,+BACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,SACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,4lBAgCrB,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,SAAnB,kCAA+F,kBAAIA,WAAW,KAAf,WAA/F,kCAAqK,kBAAIA,WAAW,KAAf,cAArK,iBAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sDAA0E,kBAAIA,WAAW,KAAf,WAA1E,YACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,iNAkB7BH,EAAWI,gBAAiB","file":"component---src-pages-context-connect-usage-mdx-3b293007cab30aa9f28b.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/gonzaloacosta/workspace/redux-mvc-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Connect the `}<em parentName=\"p\">{`view`}</em>{` to the model by using the `}<em parentName=\"p\">{`connect`}</em>{` HOC. `}</p>\n    </PageDescription>\n    <h2>{`Description`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<em parentName=\"p\">{`connect`}</em>{` HOC will consume the `}<em parentName=\"p\">{`selectProps`}</em>{` from the `}<em parentName=\"p\">{`context module`}</em>{` state, and will inject the decorated `}<em parentName=\"p\">{`actionProps`}</em>{` from the `}<em parentName=\"p\">{`context module`}</em>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`It will use the `}<em parentName=\"p\">{`instanceId`}</em>{` passed to the connected component by the parent, or it will\ntake the `}<em parentName=\"p\">{`instanceId`}</em>{` from the context.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<em parentName=\"p\">{`connect`}</em>{` HOC will also act as context provider for the passed `}<em parentName=\"p\">{`instanceId`}</em>{`.`}</p>\n      </li>\n    </ul>\n    <h3>{`E.g.:`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Given`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`import { connect } from \"redux-mvc\"\nimport { noop } from \"redux-mvc/utils\"\n\nimport { getters, actions } from \"../model\"\n\nconst decorate = connect(\n    { count: getters.count },\n    { add: actions.add, reset: actions.reset }\n)\n\nconst Counter = ({\n    count = 0,\n    add = noop,\n    reset = noop,\n}) => (\n    <div>\n        <button\n            onClick={add}\n        >\n            add\n        </button>\n        <button style={{ marginRight: 10 }} onClick={reset}>\n            reset\n        </button>\n        <div>{count}</div>\n    </div>\n)\n\nexport default decorate(Counter)\n`}</code></pre>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Note:`}</strong>{` any connected children of the `}<em parentName=\"p\">{`Counter`}</em>{` component will keep the right `}<em parentName=\"p\">{`instanceId`}</em>{` by default.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Then we can render different instances of the same `}<em parentName=\"p\">{`Counter`}</em>{` module.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`import Counter from \"ui-kit/Counter/View\"\n\nconst Counters = () => (\n    <div>\n        <Counter />\n        <Counter instanceId=\"apples\" />\n        <Counter instanceId=\"oranges\" />\n    </div>\n)\n`}</code></pre>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}