{"version":3,"sources":["webpack:///./src/pages/middleware/bridge/docs.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mCACA,iCAAgB,kBAAIC,WAAW,KAAf,yBAAhB,kBAAoF,kBAAIA,WAAW,KAAf,oBAApF,sEACA,+BACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gCAAoD,kBAAIA,WAAW,KAAf,SAApD,kDAAwI,kBAAIA,WAAW,KAAf,yBAAxI,QAAkM,kBAAIA,WAAW,KAAf,oBAAlM,KACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,8IAWzB,oCACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,0CACnB,iBAAGA,WAAW,MAAd,gDAAoE,kBAAIA,WAAW,KAAf,kBAApE,KACA,iBAAGA,WAAW,MAAd,MAA0B,kBAAIA,WAAW,KAAf,yBAA1B,wBAAoG,kBAAIA,WAAW,KAAf,aAApG,mBAA6J,kBAAIA,WAAW,KAAf,yBAA7J,uCAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,0DACnB,iBAAGA,WAAW,MAAd,+CAAmE,kBAAIA,WAAW,KAAf,oBAAnE,8BAA8I,kBAAIA,WAAW,KAAf,kBAA9I,KACA,iBAAGA,WAAW,MAAd,MAA0B,kBAAIA,WAAW,KAAf,oBAA1B,wBAA+F,kBAAIA,WAAW,KAAf,aAA/F,yBAA8J,kBAAIA,WAAW,KAAf,kBAA9J,kCAA2O,kBAAIA,WAAW,KAAf,aAA3O,kCAGJ,sCACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,cACnB,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,+FAe7BJ,EAAWK,gBAAiB","file":"component---src-pages-middleware-bridge-docs-mdx-39e1a3859368ad608f31.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/gonzaloacosta/workspace/redux-mvc-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`addBridge`}</h2>\n    <p>{`Adds the `}<em parentName=\"p\">{`trackGlobalNamespaces`}</em>{` array and the `}<em parentName=\"p\">{`dispatchToGlobal`}</em>{` filter function, that will later be used by the bridgeMiddleware.`}</p>\n    <h3>{`Usage`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Should be executed after any `}<em parentName=\"p\">{`merge`}</em>{` decorator if you want to override the default `}<em parentName=\"p\">{`trackGlobalNamespaces`}</em>{` and `}<em parentName=\"p\">{`dispatchToGlobal`}</em>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`const newModule = R.compose(\n    addBridge({ trackGlobalNamespaces, dispatchToGlobal })\n    ...\n    merge(searchBar),\n)(module)\n\n`}</code></pre>\n      </li>\n    </ul>\n    <h3>{`Parameters`}</h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`trackGlobalNamespaces?: Array<String>`}</inlineCode></p>\n        <p parentName=\"li\">{`The array of namespace dependencies from the `}<em parentName=\"p\">{`global context`}</em>{`.`}</p>\n        <p parentName=\"li\">{`If `}<em parentName=\"p\">{`trackGlobalNamespaces`}</em>{` is not passed, then `}<em parentName=\"p\">{`addBridge`}</em>{` will merge the `}<em parentName=\"p\">{`trackGlobalNamespaces`}</em>{` from all the module dependencies.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`dispatchToGlobal?: (action: ActionPayload) -> Boolean`}</inlineCode></p>\n        <p parentName=\"li\">{`This predicate function will be used by the `}<em parentName=\"p\">{`bridgeMiddleware`}</em>{` to forward actions to the `}<em parentName=\"p\">{`global context`}</em>{`.`}</p>\n        <p parentName=\"li\">{`If `}<em parentName=\"p\">{`dispatchToGlobal`}</em>{` is not passed, then `}<em parentName=\"p\">{`addBridge`}</em>{` will dispatch to the `}<em parentName=\"p\">{`global context`}</em>{` any action that is not in any `}<em parentName=\"p\">{`namespace`}</em>{` of the module dependencies.`}</p>\n      </li>\n    </ol>\n    <h3>{`Return value`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`newModule`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`newModule = {\n    ...module,\n    trackGlobalNamespaces,\n    dispatchToGlobal,\n}\n\n`}</code></pre>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}