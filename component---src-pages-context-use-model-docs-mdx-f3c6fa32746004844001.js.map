{"version":3,"sources":["webpack:///./src/pages/context/UseModel/docs.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"weAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kCACA,8BACA,qCAAoB,kBAAIC,WAAW,KAAf,aAApB,cAAwE,kBAAIA,WAAW,KAAf,WAAxE,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,sFAIL,+BACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,WAA+B,kBAAIA,WAAW,KAAf,iBAA/B,aAAsF,kBAAIA,WAAW,KAAf,eAAtF,YAA0I,kBAAIA,WAAW,KAAf,cAA1I,KACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,0IAYzB,gCACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,4CACnB,iBAAGA,WAAW,MAAd,OAA2B,0BAAYA,WAAW,KAAvB,aAA3B,0BAA2G,kBAAIA,WAAW,KAAf,SAA3G,oBAAiK,kBAAIA,WAAW,KAAf,UAAjK,KACA,iBAAGA,WAAW,MAAd,QAA4B,kBAAIA,WAAW,KAAf,OAA5B,WAAuE,0BAAYA,WAAW,KAAvB,aAAvE,qCAAkK,kBAAIA,WAAW,KAAf,gBAAlK,MAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,uCACnB,iBAAGA,WAAW,MAAd,QAA4B,kBAAIA,WAAW,KAAf,OAA5B,WAAuE,0BAAYA,WAAW,KAAvB,WAAvE,6BAAwJ,kBAAIA,WAAW,KAAf,mBAAxJ,eAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,kBACnB,iBAAGA,WAAW,MAAd,MAA0B,0BAAYA,WAAW,KAAvB,cAA1B,sEAAuJ,0BAAYA,WAAW,KAAvB,cAAvJ,OAGJ,sCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,uIAaTJ,EAAWK,gBAAiB","file":"component---src-pages-context-use-model-docs-mdx-f3c6fa32746004844001.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/gonzaloacosta/workspace/redux-mvc-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`useModel`}</h2>\n    <p>{`Hook.`}</p>\n    <p>{`Consumes the `}<em parentName=\"p\">{`selectors`}</em>{` and wraps `}<em parentName=\"p\">{`actions`}</em>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`useModel(selectors: Map<Selectors>, actions: Map<ActionCreator>, props: Object)\n`}</code></pre>\n    <h3>{`Usage`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Injects `}<em parentName=\"p\">{`selectorProps`}</em>{`, wrapped `}<em parentName=\"p\">{`actionProps`}</em>{` and the `}<em parentName=\"p\">{`instanceId`}</em>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`const { count, add } = useModel({\n  count: getters.count,\n}, {\n  add: actions.add,\n}, {\n  instanceId: \"customInstanceId\"\n})\n`}</code></pre>\n      </li>\n    </ul>\n    <h3>{`Params`}</h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`selectors: Map<SelectorFunction> | null`}</inlineCode></p>\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`selectors`}</inlineCode>{` that will consume the `}<em parentName=\"p\">{`state`}</em>{` from the parent `}<em parentName=\"p\">{`module`}</em>{`.`}</p>\n        <p parentName=\"li\">{`Each `}<em parentName=\"p\">{`key`}</em>{` of the `}<inlineCode parentName=\"p\">{`selectors`}</inlineCode>{` Map will be executed against the `}<em parentName=\"p\">{`module store`}</em>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`actions: Map<ActionCreator> | null`}</inlineCode></p>\n        <p parentName=\"li\">{`Each `}<em parentName=\"p\">{`key`}</em>{` of the `}<inlineCode parentName=\"p\">{`actions`}</inlineCode>{` Map will be wrapped with `}<em parentName=\"p\">{`module dispatch`}</em>{` function.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`props: Object`}</inlineCode></p>\n        <p parentName=\"li\">{`An `}<inlineCode parentName=\"p\">{`instanceId`}</inlineCode>{` passed by props to the hook will take precedence over the context `}<inlineCode parentName=\"p\">{`instanceId`}</inlineCode>{`.`}</p>\n      </li>\n    </ol>\n    <h3>{`Return value`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`ModelProps: {\n  ...selectorProps: Map<Any>,\n  ...wrappedActionProps: Map<Dispatch<ActionCreator>>,\n  instanceId: String\n}\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}