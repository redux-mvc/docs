{"componentChunkName":"component---src-pages-context-creation-docs-mdx","path":"/context/creation/docs/","result":{"pageContext":{"frontmatter":{"title":"Create Context","tabs":["Usage","Docs"],"description":"Guide on how to create contexts"},"relativePagePath":"/context/creation/docs.mdx","titleType":"page","MdxNode":{"id":"9dd1392f-2b4d-57ea-92a6-5e8ce89bd4bc","children":[],"parent":"8e8027c7-e1bd-51f2-ba99-abfe25889333","internal":{"content":"---\ntitle: Create Context\ntabs: ['Usage', 'Docs']\ndescription: Guide on how to create contexts\n---\n\n## createContext\n\nHOC.\n\nCreates a *redux-mvc* context, making the module's store available to the children.\n\n```ts\ncreateContext(definition: Definition)(Component: ReactComponent)\n```\n\n### Usage\n\n  Creates a *context*, runs the *module* and makes the *context* available.\n\n  ```ts\n  const Page = createContext({\n    module\n  })(PageLayout)\n\n  ```\n\n### Parameters\n\n  ```ts\n  Definition = {\n    module: ModuleInterface,\n    persist?: Boolean,\n    contextId?: String | Symbol\n  }\n  ```\n\n  1. `module: ModuleInterface`\n\n    The module to be executed in the context.\n\n  2. `persist?: Boolean`\n\n    Persists the *store object* when unmounted.\n\n    **Default:** `true`\n\n  2. `contextId?: String | Symbol`\n\n    Id where the *store object* will be persisted.\n\n    **Default:** `Symbol(\"contextId\")`\n\n\n## Return value\n\nReact Component that is a *Provider* of the *context*.\n","type":"Mdx","contentDigest":"a3bd94437fc844f641c53f6a33813bee","counter":105,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Create Context","tabs":["Usage","Docs"],"description":"Guide on how to create contexts"},"exports":{},"rawBody":"---\ntitle: Create Context\ntabs: ['Usage', 'Docs']\ndescription: Guide on how to create contexts\n---\n\n## createContext\n\nHOC.\n\nCreates a *redux-mvc* context, making the module's store available to the children.\n\n```ts\ncreateContext(definition: Definition)(Component: ReactComponent)\n```\n\n### Usage\n\n  Creates a *context*, runs the *module* and makes the *context* available.\n\n  ```ts\n  const Page = createContext({\n    module\n  })(PageLayout)\n\n  ```\n\n### Parameters\n\n  ```ts\n  Definition = {\n    module: ModuleInterface,\n    persist?: Boolean,\n    contextId?: String | Symbol\n  }\n  ```\n\n  1. `module: ModuleInterface`\n\n    The module to be executed in the context.\n\n  2. `persist?: Boolean`\n\n    Persists the *store object* when unmounted.\n\n    **Default:** `true`\n\n  2. `contextId?: String | Symbol`\n\n    Id where the *store object* will be persisted.\n\n    **Default:** `Symbol(\"contextId\")`\n\n\n## Return value\n\nReact Component that is a *Provider* of the *context*.\n","fileAbsolutePath":"/Users/gonzaloacosta/workspace/redux-mvc-docs/src/pages/context/creation/docs.mdx"}}}}