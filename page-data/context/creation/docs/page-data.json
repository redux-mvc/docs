{"componentChunkName":"component---src-pages-context-creation-docs-mdx","path":"/context/creation/docs/","result":{"pageContext":{"frontmatter":{"title":"Create Context","tabs":["Usage","Docs"],"description":"Guide on how to create contexts"},"relativePagePath":"/context/creation/docs.mdx","titleType":"page","MdxNode":{"id":"89ad71e0-bb64-5e66-b981-3531c88d14b5","children":[],"parent":"9d476742-55bb-5c21-9003-ec0cac3f8a90","internal":{"content":"---\ntitle: Create Context\ntabs: ['Usage', 'Docs']\ndescription: Guide on how to create contexts\n---\n\n## createContext\n\nHOC.\n\nCreates a *redux-mvc* context, making the module's store available to the children.\n\n```ts\ncreateContext(definition: Definition)(Component: ReactComponent)\n```\n\n### Usage\n\n  Creates a *context*, runs the *module* and makes the *context* available.\n\n  ```ts\n  const Page = createContext({\n    module\n  })(PageLayout)\n\n  ```\n\n### Parameters\n\n  ```ts\n  Definition = {\n    module: ModuleInterface,\n    persist?: Boolean,\n    contextId?: String | Symbol\n  }\n  ```\n\n  1. `module: ModuleInterface`\n\n    The module to be executed in the context.\n\n  2. `persist?: Boolean`\n\n    Persists the *store object* when unmounted.\n\n    **Default:** `true`\n\n  2. `contextId?: String | Symbol`\n\n    Id where the *store object* will be persisted.\n\n    **Default:** `Symbol(\"contextId\")`\n\n\n## Return value\n\nReact Component that is a *Provider* of the *context*.\n","type":"Mdx","contentDigest":"7cb9de67fbc3090c305d7a1fc0f2041b","counter":101,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Create Context","tabs":["Usage","Docs"],"description":"Guide on how to create contexts"},"exports":{},"rawBody":"---\ntitle: Create Context\ntabs: ['Usage', 'Docs']\ndescription: Guide on how to create contexts\n---\n\n## createContext\n\nHOC.\n\nCreates a *redux-mvc* context, making the module's store available to the children.\n\n```ts\ncreateContext(definition: Definition)(Component: ReactComponent)\n```\n\n### Usage\n\n  Creates a *context*, runs the *module* and makes the *context* available.\n\n  ```ts\n  const Page = createContext({\n    module\n  })(PageLayout)\n\n  ```\n\n### Parameters\n\n  ```ts\n  Definition = {\n    module: ModuleInterface,\n    persist?: Boolean,\n    contextId?: String | Symbol\n  }\n  ```\n\n  1. `module: ModuleInterface`\n\n    The module to be executed in the context.\n\n  2. `persist?: Boolean`\n\n    Persists the *store object* when unmounted.\n\n    **Default:** `true`\n\n  2. `contextId?: String | Symbol`\n\n    Id where the *store object* will be persisted.\n\n    **Default:** `Symbol(\"contextId\")`\n\n\n## Return value\n\nReact Component that is a *Provider* of the *context*.\n","fileAbsolutePath":"/home/gonzalo/workspace/mac/redux-mvc-docs/src/pages/context/creation/docs.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3037994772","3037994772","768070550"]}