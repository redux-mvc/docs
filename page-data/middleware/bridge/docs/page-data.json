{"componentChunkName":"component---src-pages-middleware-bridge-docs-mdx","path":"/middleware/bridge/docs/","result":{"pageContext":{"frontmatter":{"title":"Bridge Middleware","tabs":["Usage","Docs"],"description":"Description of the bridge middleware"},"relativePagePath":"/middleware/bridge/docs.mdx","titleType":"page","MdxNode":{"id":"50276515-db68-5b5a-aad1-fa089ab65c27","children":[],"parent":"0746e161-54e7-5051-9088-ee77f3caf0c4","internal":{"content":"---\ntitle: Bridge Middleware\ntabs: ['Usage', 'Docs']\ndescription: Description of the bridge middleware\n---\n\n## addBridge\n\nAdds the *trackGlobalNamespaces* array and the *dispatchToGlobal* filter function, that will later be used by the bridgeMiddleware.\n\n### Usage\n\n  - Should be executed after any *merge* decorator if you want to override the default *trackGlobalNamespaces* and *dispatchToGlobal*.\n\n  ```ts\n  const newModule = R.compose(\n      addBridge({ trackGlobalNamespaces, dispatchToGlobal })\n      ...\n      merge(searchBar),\n  )(module)\n\n  ```\n\n### Parameters\n\n  1. `trackGlobalNamespaces?: Array<String>`\n\n    The array of namespace dependencies from the *global context*.\n\n    If *trackGlobalNamespaces* is not passed, then *addBridge* will merge the *trackGlobalNamespaces* from all the module dependencies.\n\n  2. `dispatchToGlobal?: (action: ActionPayload) -> Boolean`\n\n    This predicate function will be used by the *bridgeMiddleware* to forward actions to the *global context*.\n\n    If *dispatchToGlobal* is not passed, then *addBridge* will dispatch to the *global context* any action that is not in any *namespace* of the module dependencies.\n\n### Return value\n\n  - **newModule**\n\n  ```ts\n  newModule = {\n      ...module,\n      trackGlobalNamespaces,\n      dispatchToGlobal,\n  }\n\n  ```\n","type":"Mdx","contentDigest":"2e3d0c020ed0c22052a2de8d14acdadf","counter":101,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Bridge Middleware","tabs":["Usage","Docs"],"description":"Description of the bridge middleware"},"exports":{},"rawBody":"---\ntitle: Bridge Middleware\ntabs: ['Usage', 'Docs']\ndescription: Description of the bridge middleware\n---\n\n## addBridge\n\nAdds the *trackGlobalNamespaces* array and the *dispatchToGlobal* filter function, that will later be used by the bridgeMiddleware.\n\n### Usage\n\n  - Should be executed after any *merge* decorator if you want to override the default *trackGlobalNamespaces* and *dispatchToGlobal*.\n\n  ```ts\n  const newModule = R.compose(\n      addBridge({ trackGlobalNamespaces, dispatchToGlobal })\n      ...\n      merge(searchBar),\n  )(module)\n\n  ```\n\n### Parameters\n\n  1. `trackGlobalNamespaces?: Array<String>`\n\n    The array of namespace dependencies from the *global context*.\n\n    If *trackGlobalNamespaces* is not passed, then *addBridge* will merge the *trackGlobalNamespaces* from all the module dependencies.\n\n  2. `dispatchToGlobal?: (action: ActionPayload) -> Boolean`\n\n    This predicate function will be used by the *bridgeMiddleware* to forward actions to the *global context*.\n\n    If *dispatchToGlobal* is not passed, then *addBridge* will dispatch to the *global context* any action that is not in any *namespace* of the module dependencies.\n\n### Return value\n\n  - **newModule**\n\n  ```ts\n  newModule = {\n      ...module,\n      trackGlobalNamespaces,\n      dispatchToGlobal,\n  }\n\n  ```\n","fileAbsolutePath":"/Users/gonzaloacosta/workspace/redux-mvc-docs/src/pages/middleware/bridge/docs.mdx"}}}}