{"componentChunkName":"component---src-pages-module-instances-usage-mdx","path":"/module/instances/usage/","result":{"pageContext":{"frontmatter":{"title":"Instances","description":"Guide for module instances"},"relativePagePath":"/module/instances/usage.mdx","titleType":"page","MdxNode":{"id":"4ac1a1ee-3ea7-56a1-97bb-13b0b24c99a8","children":[],"parent":"fa8d4122-2841-5802-824b-557e537b210f","internal":{"content":"---\ntitle: Instances\ndescription: Guide for module instances\n---\n\n<PageDescription>\n\n*Modules* can be rendered with different instances, allowing a module to be reused many times in one screen while keeping it's own state per instance.\n\n</PageDescription>\n\n## Module Instances\n\nThere's 3 ways to work with instances:\n\n  1. No instance, then the module will use the *DEFAULT_INSTANCE_ID* (\"default\")\n\n  ```ts\n  import Counter from \"ui-kit/Counter/View\"\n\n  const Counters = () => (\n      <div>\n          <Counter />\n          ...\n      </div>\n  )\n\n  ```\n\n  2. Constant instance\n\n  ```ts\n  import Counter from \"ui-kit/Counter/View\"\n\n  const Counters = () => (\n      <div>\n          <Counter instanceId=\"apples\" />\n          <Counter instanceId=\"oranges\" />\n          ...\n      </div>\n  )\n\n  ```\n\n  3. Dynamic instance\n\n  ```ts\n  import Counter from \"ui-kit/Counter/View\"\n\n  const Counters = ({ instances = []}) => (\n      <div>\n      { \n        R.map(\n          instance => <Counter instanceId={instance} />, \n          instances\n        ) \n      }\n      </div>\n  )\n\n  ```\n  \n  **Note:** The *Counter* component should be a *connected* component.\n","type":"Mdx","contentDigest":"87fce68f7c22c6162b72ca7637db6641","counter":113,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Instances","description":"Guide for module instances"},"exports":{},"rawBody":"---\ntitle: Instances\ndescription: Guide for module instances\n---\n\n<PageDescription>\n\n*Modules* can be rendered with different instances, allowing a module to be reused many times in one screen while keeping it's own state per instance.\n\n</PageDescription>\n\n## Module Instances\n\nThere's 3 ways to work with instances:\n\n  1. No instance, then the module will use the *DEFAULT_INSTANCE_ID* (\"default\")\n\n  ```ts\n  import Counter from \"ui-kit/Counter/View\"\n\n  const Counters = () => (\n      <div>\n          <Counter />\n          ...\n      </div>\n  )\n\n  ```\n\n  2. Constant instance\n\n  ```ts\n  import Counter from \"ui-kit/Counter/View\"\n\n  const Counters = () => (\n      <div>\n          <Counter instanceId=\"apples\" />\n          <Counter instanceId=\"oranges\" />\n          ...\n      </div>\n  )\n\n  ```\n\n  3. Dynamic instance\n\n  ```ts\n  import Counter from \"ui-kit/Counter/View\"\n\n  const Counters = ({ instances = []}) => (\n      <div>\n      { \n        R.map(\n          instance => <Counter instanceId={instance} />, \n          instances\n        ) \n      }\n      </div>\n  )\n\n  ```\n  \n  **Note:** The *Counter* component should be a *connected* component.\n","fileAbsolutePath":"/home/gonzalo/workspace/mac/redux-mvc-docs/src/pages/module/instances/usage.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3037994772","3037994772","768070550"]}