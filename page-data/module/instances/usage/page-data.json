{"componentChunkName":"component---src-pages-module-instances-usage-mdx","path":"/module/instances/usage/","result":{"pageContext":{"frontmatter":{"title":"Instances","description":"Guide for module instances"},"relativePagePath":"/module/instances/usage.mdx","titleType":"page","MdxNode":{"id":"2a517fe6-2514-5bff-9130-bd16a129933b","children":[],"parent":"464fe647-f2bf-52e8-8195-a3de91680d92","internal":{"content":"---\ntitle: Instances\ndescription: Guide for module instances\n---\n\n<PageDescription>\n\n*Modules* can be rendered with different instances, allowing a module to be reused many times in one screen while keeping it's own state per instance.\n\n</PageDescription>\n\n## Module Instances\n\nThere's 3 ways to work with instances:\n\n  1. No instance, then the module will use the *DEFAULT_INSTANCE_ID* (\"default\")\n\n  ```ts\n  import Counter from \"ui-kit/Counter/View\"\n\n  const Counters = () => (\n      <div>\n          <Counter />\n          ...\n      </div>\n  )\n\n  ```\n\n  2. Constant instance\n\n  ```ts\n  import Counter from \"ui-kit/Counter/View\"\n\n  const Counters = () => (\n      <div>\n          <Counter instanceId=\"apples\" />\n          <Counter instanceId=\"oranges\" />\n          ...\n      </div>\n  )\n\n  ```\n\n  3. Dynamic instance\n\n  ```ts\n  import Counter from \"ui-kit/Counter/View\"\n\n  const Counters = ({ instances = []}) => (\n      <div>\n      { \n        R.map(\n          instance => <Counter instanceId={instance} />, \n          instances\n        ) \n      }\n      </div>\n  )\n\n  ```\n  \n  **Note:** The *Counter* component should be a *connected* component.\n","type":"Mdx","contentDigest":"116a815f03743fba3e8080d1d3a0958b","counter":94,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Instances","description":"Guide for module instances"},"exports":{},"rawBody":"---\ntitle: Instances\ndescription: Guide for module instances\n---\n\n<PageDescription>\n\n*Modules* can be rendered with different instances, allowing a module to be reused many times in one screen while keeping it's own state per instance.\n\n</PageDescription>\n\n## Module Instances\n\nThere's 3 ways to work with instances:\n\n  1. No instance, then the module will use the *DEFAULT_INSTANCE_ID* (\"default\")\n\n  ```ts\n  import Counter from \"ui-kit/Counter/View\"\n\n  const Counters = () => (\n      <div>\n          <Counter />\n          ...\n      </div>\n  )\n\n  ```\n\n  2. Constant instance\n\n  ```ts\n  import Counter from \"ui-kit/Counter/View\"\n\n  const Counters = () => (\n      <div>\n          <Counter instanceId=\"apples\" />\n          <Counter instanceId=\"oranges\" />\n          ...\n      </div>\n  )\n\n  ```\n\n  3. Dynamic instance\n\n  ```ts\n  import Counter from \"ui-kit/Counter/View\"\n\n  const Counters = ({ instances = []}) => (\n      <div>\n      { \n        R.map(\n          instance => <Counter instanceId={instance} />, \n          instances\n        ) \n      }\n      </div>\n  )\n\n  ```\n  \n  **Note:** The *Counter* component should be a *connected* component.\n","fileAbsolutePath":"/Users/gonzaloacosta/workspace/redux-mvc-docs/src/pages/module/instances/usage.mdx"}}}}