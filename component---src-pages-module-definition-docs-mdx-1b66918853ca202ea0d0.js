(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{QAdO:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return s}));a("91GP"),a("rGqo"),a("yt8O"),a("Btvt"),a("RW0V"),a("q1tI");var n=a("7ljp"),b=a("013z");a("qKvR");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var l={},c=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(n.b)("div",t)}},p=c("AnchorLinks"),o=c("AnchorLink"),m={_frontmatter:l},i=b.a;function s(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,b={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,["components"]);return Object(n.b)(i,r({},m,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)(p,{mdxType:"AnchorLinks"},Object(n.b)(o,{mdxType:"AnchorLink"},"addReducer"),Object(n.b)(o,{mdxType:"AnchorLink"},"addLifecycle"),Object(n.b)(o,{mdxType:"AnchorLink"},"addBridge"),Object(n.b)(o,{mdxType:"AnchorLink"},"createModule")),Object(n.b)("h2",null,"addReducer"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Creates a reducer from all the module dependencies."),Object(n.b)("li",{parentName:"ul"},"Merges the iniState from all the module dependencies."),Object(n.b)("li",{parentName:"ul"},"Merges the reducer functions from all the module dependencies.")),Object(n.b)("h3",null,"Usage"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Should be executed after merging all the modules:"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"const newModule = R.compose(\n    ...\n    addReducer(),\n    ...\n    merge(counter),\n    merge(searchBar)\n)(module)\n\n")))),Object(n.b)("h3",null,"Return value"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"newModule")),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"newModule = {\n    ...module,\n    iniState: Object,\n    reduers: Map<ReducerFunction>,\n    reducer(state, action) {...},\n}\n\n")))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Methods:")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"reducer")),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"reducer: (previousState: Object, action: ActionPayload) -> nextState: Object\n\n")),Object(n.b)("p",{parentName:"li"},"Computes the ",Object(n.b)("em",{parentName:"p"},"nextState")," out of the ",Object(n.b)("em",{parentName:"p"},"previousState")," and ",Object(n.b)("em",{parentName:"p"},"action")))),Object(n.b)("hr",null),Object(n.b)("h2",null,"addLifecycle"),Object(n.b)("p",null,"Adds lifecycle ",Object(n.b)("em",{parentName:"p"},"constructor")," and ",Object(n.b)("em",{parentName:"p"},"componentWillUnmount")," methods to the ",Object(n.b)("em",{parentName:"p"},"module")," for store creation. This methods will be called by the ",Object(n.b)("em",{parentName:"p"},"redux-mvc Context")," provider."),Object(n.b)("h3",null,"Usage"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Should be executed after all the other decorators."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"const newModule = R.compose(\n    addLifecycle(),\n    ...\n    merge(counter)\n)(module)\n\n")))),Object(n.b)("h3",null,"Return value"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"newModule")),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"newModule = {\n    ...module,\n    constructor() {...},\n    componentWillUnmount() {...}\n}\n\n")))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Methods:")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"constructor:")),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"constructor: ({ moduleInstances, contextId, persist }) -> moduleInstance: ModuleInstance\n\n")),Object(n.b)("p",{parentName:"li"},"Creates the ",Object(n.b)("em",{parentName:"p"},"store")," and returns the ",Object(n.b)("em",{parentName:"p"},"moduleInstance"),"."),Object(n.b)("p",{parentName:"li"},"Parameters:"),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"moduleInstances: Map<ModuleInstance>")),Object(n.b)("p",{parentName:"li"},"All the instances of modules keep by the ",Object(n.b)("em",{parentName:"p"},"Context")," provider.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"contextId: Symbol | String")),Object(n.b)("p",{parentName:"li"},"The id of the context.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"persist: Boolean")),Object(n.b)("p",{parentName:"li"},"Indicates to persist the store object after the ",Object(n.b)("em",{parentName:"p"},"Context")," is unmounted."))),Object(n.b)("p",{parentName:"li"},"Return Value"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Should return the ",Object(n.b)("em",{parentName:"p"},"moduleInstance")," object with the ",Object(n.b)("em",{parentName:"p"},"store")," in it."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"moduleInstance = {\n  store: StoreObject\n}\n\n")))))),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"componentWillUnmount")),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"componentWillUnmount: ({ moduleInstances, contextId, persist }) -> moduleInstance: ModuleInstance\n\n")),Object(n.b)("p",{parentName:"li"},"Removes the ",Object(n.b)("em",{parentName:"p"},"store")," from the ",Object(n.b)("em",{parentName:"p"},"moduleInstance")," if ",Object(n.b)("em",{parentName:"p"},"persist")," is false."),Object(n.b)("p",{parentName:"li"},"Parameters"),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"moduleInstances: Map<ModuleInstance>")),Object(n.b)("p",{parentName:"li"},"All the instances of modules keep by the ",Object(n.b)("em",{parentName:"p"},"Context")," provider.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"contextId: Symbol | String")),Object(n.b)("p",{parentName:"li"},"The id of the context.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"persist: Boolean")),Object(n.b)("p",{parentName:"li"},"Indicates to persist the store object after the ",Object(n.b)("em",{parentName:"p"},"Context")," is unmounted."))),Object(n.b)("p",{parentName:"li"},"Return Value"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"It may return the ",Object(n.b)("em",{parentName:"p"},"moduleInstance")," object with the ",Object(n.b)("em",{parentName:"p"},"store")," in it."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"moduleInstance = {\n  store?: StoreObject\n}\n\n")))))),Object(n.b)("hr",null),Object(n.b)("h2",null,"addBridge"),Object(n.b)("p",null,"Adds the ",Object(n.b)("em",{parentName:"p"},"trackGlobalNamespaces")," array and the ",Object(n.b)("em",{parentName:"p"},"dispatchToGlobal")," filter function, that will later be used by the bridgeMiddleware."),Object(n.b)("h3",null,"Usage"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Should be executed after any ",Object(n.b)("em",{parentName:"p"},"merge")," decorator if you want to override the default ",Object(n.b)("em",{parentName:"p"},"trackGlobalNamespaces")," and ",Object(n.b)("em",{parentName:"p"},"dispatchToGlobal"),"."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"const newModule = R.compose(\n    addBridge({ trackGlobalNamespaces, dispatchToGlobal })\n    ...\n    merge(searchBar),\n)(module)\n\n")))),Object(n.b)("h3",null,"Parameters"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"trackGlobalNamespaces?: Array<String>")),Object(n.b)("p",{parentName:"li"},"The array of namespace dependencies from the ",Object(n.b)("em",{parentName:"p"},"global context"),"."),Object(n.b)("p",{parentName:"li"},"If ",Object(n.b)("em",{parentName:"p"},"trackGlobalNamespaces")," is not passed, then ",Object(n.b)("em",{parentName:"p"},"addBridge")," will merge the ",Object(n.b)("em",{parentName:"p"},"trackGlobalNamespaces")," from all the module dependencies.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"dispatchToGlobal?: (action: ActionPayload) -> Boolean")),Object(n.b)("p",{parentName:"li"},"This predicate function will be used by the ",Object(n.b)("em",{parentName:"p"},"bridgeMiddleware")," to forward actions to the ",Object(n.b)("em",{parentName:"p"},"global context"),"."),Object(n.b)("p",{parentName:"li"},"If ",Object(n.b)("em",{parentName:"p"},"dispatchToGlobal")," is not passed, then ",Object(n.b)("em",{parentName:"p"},"addBridge")," will dispatch to the ",Object(n.b)("em",{parentName:"p"},"global context")," any action that is not in any ",Object(n.b)("em",{parentName:"p"},"namespace")," of the module dependencies."))),Object(n.b)("h3",null,"Return value"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"newModule")),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"newModule = {\n    ...module,\n    trackGlobalNamespaces,\n    dispatchToGlobal,\n}\n\n")))),Object(n.b)("hr",null),Object(n.b)("h2",null,"createModule"),Object(n.b)("p",null,"Helper."),Object(n.b)("p",null,"Applies ",Object(n.b)("em",{parentName:"p"},"addReducer")," and ",Object(n.b)("em",{parentName:"p"},"addLifecycle")," in that order to create a module."),Object(n.b)("h3",null,"Usage"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Can be executed by itself,"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"const newModule = creatModule(model)\n\n")),Object(n.b)("p",{parentName:"li"},"or after any other decorator."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"const newModule = R.compose(\n  creatModule, \n  ...\n  addBridge(...),\n  merge(searchBar),\n  merge(counter)\n)(model)\n\n")))),Object(n.b)("h3",null,"Parameters"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},Object(n.b)("inlineCode",{parentName:"li"},"model: ModelInterface"))),Object(n.b)("h3",null,"Return value"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("strong",{parentName:"p"},"newModule")),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{className:"language-ts"}),"newModule = {\n    ...model,\n    reducer(state, action) {...},\n    constructor() {}, // creates the store object\n    componentWillUnmount() {} // creates the store object\n}\n\n")))))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-module-definition-docs-mdx-1b66918853ca202ea0d0.js.map