{"version":3,"sources":["webpack:///./src/pages/context/connect/docs.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"weAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iCACA,6BACA,qCAAoB,kBAAIC,WAAW,KAAf,oBAApB,WAA4E,kBAAIA,WAAW,KAAf,kBAA5E,MACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,kHAIL,gCACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,oCACnB,iBAAGA,WAAW,MAAd,OAA2B,0BAAYA,WAAW,KAAvB,aAA3B,0BAA2G,kBAAIA,WAAW,KAAf,SAA3G,oBAAiK,kBAAIA,WAAW,KAAf,UAAjK,KACA,iBAAGA,WAAW,MAAd,QAA4B,kBAAIA,WAAW,KAAf,OAA5B,WAAuE,kBAAIA,WAAW,KAAf,aAAvE,4BAAyI,kBAAIA,WAAW,KAAf,QAAzI,WAAqL,kBAAIA,WAAW,KAAf,oBAArL,MAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,uCACnB,iBAAGA,WAAW,MAAd,QAA4B,kBAAIA,WAAW,KAAf,OAA5B,WAAuE,kBAAIA,WAAW,KAAf,WAAvE,qCAAgJ,kBAAIA,WAAW,KAAf,YAAhJ,oBAAyM,kBAAIA,WAAW,KAAf,QAAzM,WAAqP,kBAAIA,WAAW,KAAf,oBAArP,MAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,0BACnB,iBAAGA,WAAW,MAAd,UAA8B,kBAAIA,WAAW,KAAf,aAA9B,2CAA+G,kBAAIA,WAAW,KAAf,cAA/G,KACA,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,YAAnB,IAAoE,0BAAYA,WAAW,KAAvB,UAEtE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,0BAAYA,WAAW,KAAvB,8BACnB,iBAAGA,WAAW,MAAd,mBAAuC,kBAAIA,WAAW,KAAf,aAAvC,OAGJ,sCACA,sDAAqC,kBAAIA,WAAW,KAAf,kBAArC,KAAqF,kBAAIA,WAAW,KAAf,gBAArF,YAA0I,kBAAIA,WAAW,KAAf,cAA1I,MAKJJ,EAAWK,gBAAiB","file":"component---src-pages-context-connect-docs-mdx-dff8adb1c2e21ef54bcd.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/gonzaloacosta/workspace/redux-mvc-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`connect`}</h2>\n    <p>{`HOC.`}</p>\n    <p>{`Connects the `}<em parentName=\"p\">{`WrappedComponent`}</em>{` to the `}<em parentName=\"p\">{`module context`}</em>{`. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`connect(selectors: Map<Selectors>, actions: Map<ActionCreator>, options: Object)(Component: ReactComponent)\n`}</code></pre>\n    <h3>{`Params`}</h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`selectors: Map<Selector> | null`}</inlineCode></p>\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`selectors`}</inlineCode>{` that will consume the `}<em parentName=\"p\">{`state`}</em>{` from the parent `}<em parentName=\"p\">{`module`}</em>{`.`}</p>\n        <p parentName=\"li\">{`Each `}<em parentName=\"p\">{`key`}</em>{` of the `}<em parentName=\"p\">{`selectors`}</em>{` Map will be injected as `}<em parentName=\"p\">{`prop`}</em>{` to the `}<em parentName=\"p\">{`WrappedComponent`}</em>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`actions: Map<ActionCreator> | null`}</inlineCode></p>\n        <p parentName=\"li\">{`Each `}<em parentName=\"p\">{`key`}</em>{` of the `}<em parentName=\"p\">{`actions`}</em>{` Map will wrapped into the module `}<em parentName=\"p\">{`dispatch`}</em>{` and injected as `}<em parentName=\"p\">{`prop`}</em>{` to the `}<em parentName=\"p\">{`WrappedComponent`}</em>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`options.pure: Boolean`}</inlineCode></p>\n        <p parentName=\"li\">{`If the `}<em parentName=\"p\">{`Component`}</em>{` is a functional component, wraps it in `}<em parentName=\"p\">{`React.memo`}</em>{`.`}</p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Default:`}</strong>{` `}<inlineCode parentName=\"p\">{`true`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Component: ReactComponent`}</inlineCode></p>\n        <p parentName=\"li\">{`Component to be `}<em parentName=\"p\">{`connected`}</em>{`.`}</p>\n      </li>\n    </ol>\n    <h3>{`Return value`}</h3>\n    <p>{`React Component with injected `}<em parentName=\"p\">{`selector props`}</em>{`, `}<em parentName=\"p\">{`action props`}</em>{` and the `}<em parentName=\"p\">{`instanceId`}</em>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}