{"version":3,"sources":["webpack:///./src/pages/module/definition/docs.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-module-definition-docs-mdx-1b66918853ca202ea0d0.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/gonzaloacosta/workspace/redux-mvc-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">addReducer</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">addLifecycle</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">addBridge</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">createModule</AnchorLink>\n    </AnchorLinks>\n    <h2>{`addReducer`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Creates a reducer from all the module dependencies.`}</li>\n      <li parentName=\"ul\">{`Merges the iniState from all the module dependencies.`}</li>\n      <li parentName=\"ul\">{`Merges the reducer functions from all the module dependencies.`}</li>\n    </ul>\n    <h3>{`Usage`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Should be executed after merging all the modules:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`const newModule = R.compose(\n    ...\n    addReducer(),\n    ...\n    merge(counter),\n    merge(searchBar)\n)(module)\n\n`}</code></pre>\n      </li>\n    </ul>\n    <h3>{`Return value`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`newModule`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`newModule = {\n    ...module,\n    iniState: Object,\n    reduers: Map<ReducerFunction>,\n    reducer(state, action) {...},\n}\n\n`}</code></pre>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\">{`Methods:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`reducer`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`reducer: (previousState: Object, action: ActionPayload) -> nextState: Object\n\n`}</code></pre>\n        <p parentName=\"li\">{`Computes the `}<em parentName=\"p\">{`nextState`}</em>{` out of the `}<em parentName=\"p\">{`previousState`}</em>{` and `}<em parentName=\"p\">{`action`}</em></p>\n      </li>\n    </ul>\n    <hr></hr>\n    <h2>{`addLifecycle`}</h2>\n    <p>{`Adds lifecycle `}<em parentName=\"p\">{`constructor`}</em>{` and `}<em parentName=\"p\">{`componentWillUnmount`}</em>{` methods to the `}<em parentName=\"p\">{`module`}</em>{` for store creation. This methods will be called by the `}<em parentName=\"p\">{`redux-mvc Context`}</em>{` provider.`}</p>\n    <h3>{`Usage`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Should be executed after all the other decorators.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`const newModule = R.compose(\n    addLifecycle(),\n    ...\n    merge(counter)\n)(module)\n\n`}</code></pre>\n      </li>\n    </ul>\n    <h3>{`Return value`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`newModule`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`newModule = {\n    ...module,\n    constructor() {...},\n    componentWillUnmount() {...}\n}\n\n`}</code></pre>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\">{`Methods:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`constructor:`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`constructor: ({ moduleInstances, contextId, persist }) -> moduleInstance: ModuleInstance\n\n`}</code></pre>\n        <p parentName=\"li\">{`Creates the `}<em parentName=\"p\">{`store`}</em>{` and returns the `}<em parentName=\"p\">{`moduleInstance`}</em>{`.`}</p>\n        <p parentName=\"li\">{`Parameters:`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`moduleInstances: Map<ModuleInstance>`}</inlineCode></p>\n            <p parentName=\"li\">{`All the instances of modules keep by the `}<em parentName=\"p\">{`Context`}</em>{` provider.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`contextId: Symbol | String`}</inlineCode></p>\n            <p parentName=\"li\">{`The id of the context.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`persist: Boolean`}</inlineCode></p>\n            <p parentName=\"li\">{`Indicates to persist the store object after the `}<em parentName=\"p\">{`Context`}</em>{` is unmounted.`}</p>\n          </li>\n        </ol>\n        <p parentName=\"li\">{`Return Value`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Should return the `}<em parentName=\"p\">{`moduleInstance`}</em>{` object with the `}<em parentName=\"p\">{`store`}</em>{` in it.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-ts\"\n              }}>{`moduleInstance = {\n  store: StoreObject\n}\n\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`componentWillUnmount`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`componentWillUnmount: ({ moduleInstances, contextId, persist }) -> moduleInstance: ModuleInstance\n\n`}</code></pre>\n        <p parentName=\"li\">{`Removes the `}<em parentName=\"p\">{`store`}</em>{` from the `}<em parentName=\"p\">{`moduleInstance`}</em>{` if `}<em parentName=\"p\">{`persist`}</em>{` is false.`}</p>\n        <p parentName=\"li\">{`Parameters`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`moduleInstances: Map<ModuleInstance>`}</inlineCode></p>\n            <p parentName=\"li\">{`All the instances of modules keep by the `}<em parentName=\"p\">{`Context`}</em>{` provider.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`contextId: Symbol | String`}</inlineCode></p>\n            <p parentName=\"li\">{`The id of the context.`}</p>\n          </li>\n          <li parentName=\"ol\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`persist: Boolean`}</inlineCode></p>\n            <p parentName=\"li\">{`Indicates to persist the store object after the `}<em parentName=\"p\">{`Context`}</em>{` is unmounted.`}</p>\n          </li>\n        </ol>\n        <p parentName=\"li\">{`Return Value`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`It may return the `}<em parentName=\"p\">{`moduleInstance`}</em>{` object with the `}<em parentName=\"p\">{`store`}</em>{` in it.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-ts\"\n              }}>{`moduleInstance = {\n  store?: StoreObject\n}\n\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <hr></hr>\n    <h2>{`addBridge`}</h2>\n    <p>{`Adds the `}<em parentName=\"p\">{`trackGlobalNamespaces`}</em>{` array and the `}<em parentName=\"p\">{`dispatchToGlobal`}</em>{` filter function, that will later be used by the bridgeMiddleware.`}</p>\n    <h3>{`Usage`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Should be executed after any `}<em parentName=\"p\">{`merge`}</em>{` decorator if you want to override the default `}<em parentName=\"p\">{`trackGlobalNamespaces`}</em>{` and `}<em parentName=\"p\">{`dispatchToGlobal`}</em>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`const newModule = R.compose(\n    addBridge({ trackGlobalNamespaces, dispatchToGlobal })\n    ...\n    merge(searchBar),\n)(module)\n\n`}</code></pre>\n      </li>\n    </ul>\n    <h3>{`Parameters`}</h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`trackGlobalNamespaces?: Array<String>`}</inlineCode></p>\n        <p parentName=\"li\">{`The array of namespace dependencies from the `}<em parentName=\"p\">{`global context`}</em>{`.`}</p>\n        <p parentName=\"li\">{`If `}<em parentName=\"p\">{`trackGlobalNamespaces`}</em>{` is not passed, then `}<em parentName=\"p\">{`addBridge`}</em>{` will merge the `}<em parentName=\"p\">{`trackGlobalNamespaces`}</em>{` from all the module dependencies.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`dispatchToGlobal?: (action: ActionPayload) -> Boolean`}</inlineCode></p>\n        <p parentName=\"li\">{`This predicate function will be used by the `}<em parentName=\"p\">{`bridgeMiddleware`}</em>{` to forward actions to the `}<em parentName=\"p\">{`global context`}</em>{`.`}</p>\n        <p parentName=\"li\">{`If `}<em parentName=\"p\">{`dispatchToGlobal`}</em>{` is not passed, then `}<em parentName=\"p\">{`addBridge`}</em>{` will dispatch to the `}<em parentName=\"p\">{`global context`}</em>{` any action that is not in any `}<em parentName=\"p\">{`namespace`}</em>{` of the module dependencies.`}</p>\n      </li>\n    </ol>\n    <h3>{`Return value`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`newModule`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`newModule = {\n    ...module,\n    trackGlobalNamespaces,\n    dispatchToGlobal,\n}\n\n`}</code></pre>\n      </li>\n    </ul>\n    <hr></hr>\n    <h2>{`createModule`}</h2>\n    <p>{`Helper.`}</p>\n    <p>{`Applies `}<em parentName=\"p\">{`addReducer`}</em>{` and `}<em parentName=\"p\">{`addLifecycle`}</em>{` in that order to create a module.`}</p>\n    <h3>{`Usage`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Can be executed by itself,`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`const newModule = creatModule(model)\n\n`}</code></pre>\n        <p parentName=\"li\">{`or after any other decorator.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`const newModule = R.compose(\n  creatModule, \n  ...\n  addBridge(...),\n  merge(searchBar),\n  merge(counter)\n)(model)\n\n`}</code></pre>\n      </li>\n    </ul>\n    <h3>{`Parameters`}</h3>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`model: ModelInterface`}</inlineCode></li>\n    </ol>\n    <h3>{`Return value`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`newModule`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`newModule = {\n    ...model,\n    reducer(state, action) {...},\n    constructor() {}, // creates the store object\n    componentWillUnmount() {} // creates the store object\n}\n\n`}</code></pre>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}